// Code generated by protoc-gen-go.
// source: model.proto
// DO NOT EDIT!

/*
Package tensorflow_serving is a generated protocol buffer package.

It is generated from these files:
	model.proto
	prediction_service.proto
	predict.proto

It has these top-level messages:
	ModelSpec
	PredictRequest
	PredictResponse
*/
package tensorflow_serving

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/wrappers"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Metadata for an inference request such as the model name and version.
type ModelSpec struct {
	// Required servable name.
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Optional version. If unspecified, will use the latest (numerical) version.
	// Typically not needed unless coordinating across multiple models that were
	// co-trained and/or have inter-dependencies on the versions used at inference
	// time.
	Version *google_protobuf.Int64Value `protobuf:"bytes,2,opt,name=version" json:"version,omitempty"`
}

func (m *ModelSpec) Reset()                    { *m = ModelSpec{} }
func (m *ModelSpec) String() string            { return proto.CompactTextString(m) }
func (*ModelSpec) ProtoMessage()               {}
func (*ModelSpec) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ModelSpec) GetVersion() *google_protobuf.Int64Value {
	if m != nil {
		return m.Version
	}
	return nil
}

func init() {
	proto.RegisterType((*ModelSpec)(nil), "tensorflow.serving.ModelSpec")
}

func init() { proto.RegisterFile("model.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 179 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x44, 0xcd, 0x3d, 0x0b, 0xc2, 0x30,
	0x14, 0x85, 0x61, 0xa2, 0xa2, 0x34, 0xdd, 0x32, 0x15, 0x5d, 0x8a, 0x53, 0xa7, 0x04, 0xfc, 0x02,
	0x57, 0x37, 0x07, 0x97, 0x0a, 0xdd, 0xd3, 0x7a, 0x1b, 0x0b, 0x69, 0x6e, 0x48, 0xd2, 0x16, 0xff,
	0xb9, 0xa3, 0x58, 0x29, 0x6e, 0x67, 0x78, 0x78, 0x0f, 0x8d, 0x5b, 0x7c, 0x80, 0xe6, 0xd6, 0x61,
	0x40, 0xc6, 0x02, 0x18, 0x8f, 0xae, 0xd6, 0x38, 0x70, 0x0f, 0xae, 0x6f, 0x8c, 0x5a, 0x9f, 0x55,
	0x13, 0x9e, 0x5d, 0xc9, 0x2b, 0x6c, 0x85, 0x42, 0x2d, 0x8d, 0x12, 0x23, 0x2e, 0xbb, 0x5a, 0xd8,
	0xf0, 0xb2, 0xe0, 0xc5, 0xe0, 0xa4, 0xb5, 0xe0, 0xfe, 0xe3, 0x97, 0xdb, 0x16, 0x34, 0xba, 0x7d,
	0xeb, 0x77, 0x0b, 0x15, 0x63, 0x74, 0x61, 0x64, 0x0b, 0x09, 0x49, 0x49, 0x16, 0xe5, 0xe3, 0x66,
	0x47, 0xba, 0xea, 0xc1, 0xf9, 0x06, 0x4d, 0x32, 0x4b, 0x49, 0x16, 0xef, 0x36, 0x5c, 0x21, 0x2a,
	0x0d, 0x7c, 0xba, 0xe0, 0x57, 0x13, 0x4e, 0x87, 0x42, 0xea, 0x0e, 0xf2, 0xc9, 0x5e, 0xe6, 0x6f,
	0x42, 0xca, 0xe5, 0x48, 0xf6, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xf3, 0x6b, 0xee, 0x47, 0xc1,
	0x00, 0x00, 0x00,
}
